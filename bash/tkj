#! /usr/bin/env bash

# by torstein.k.johansen@gmail.com

. $HOME/src/my-little-friends/bash/alexandria

function start_of_day()
{
    print "Putting on some good music ..."
    mpd 1>/dev/null 2>/dev/null &
    # mpc play 1>/dev/null 2>/dev/null &

    # set up the network
    if [ $(ping -c 1 vg.no 2>/dev/null | grep received | wc -l) -eq 0 ]; then
      print "Enter your root password to set up the network"
      su -c "bash /home/torstein/src/my-little-friends/bash/tkj-ifupd"
    fi

    if [ $(/sbin/ifconfig | grep tun0 -A 1 | grep inet | wc -l) -lt 1 ]; then
        TERM=rxvt-color phionvpn
    fi

    if [ $(ssh-add -l | grep -v "no identities" | wc -l) -lt 1 ]; then
        print "Adding your SSH key"
        ssh-add
    fi
    
    print "Setting a random wallpaper..."
    set_random_wallpaper &

    # the applications that requirethe network to work
    print "Launching my favourite applications..."
    app_list="
opera
pidgin
emacs
icedove
firefox
"
    for el in $app_list; do
        if [ $(ps aux | grep  $el | grep -v grep | wc -l) -lt 1 ]; then
            if [ $el = "emacs" ]; then
                # emacs -fn 7x14 -f gnus &
                bash ~/src/my-little-friends/bash/create-emacs-file-cache
                print "Replacing ~/.emacs.d/file_cache.el ..."
                run cp /tmp/file_cache.el-`date --iso` ~/.emacs.d/file_cache.el
                emacs-snapshot-lucid -fn 7x14 ~/doc/work.org &
            else
                $el 1>/dev/null 2>/dev/null &
            fi
        fi
    done

    echo -n $id "Start of the day: Getting, building & deploying the latest code"
    echo "..."
    tkjdaily

    print "Happy hacking :-)"
}

function delete_cache_files()
{
    local dir_list="
      $HOME/.opera/cache
      $HOME/.mozilla/firefox/1tznm2xo.default/Cache
      $HOME/.java/deployment/cache/6.0
      $HOME/.cache/google-chrome
    "

    for el in $dir_list; do
        if [ -d $el ]; then
            rm -r $el
        fi
    done
}

function escenic_dates()
{
    echo -n "Sidney:    "
    TZ='Australia/Sydney' date
    echo -n "Taipei:    "
    TZ='Asia/Taipei' date
    echo -n "Bangkok:   "
    TZ='Asia/Bangkok' date
    echo -n "Dhaka:     "
    TZ='Asia/Dhaka' date
    echo -n "Oslo:      "
    TZ='Europe/Oslo' date
    echo -n "Argentina: "
    TZ='America/Argentina/Buenos_Aires' date
}

function end_of_day()
{
    # echo -n $id "End of the day, generating report ..."
    tmp=$(mktemp)
    cat $HOME/.widt.log > $tmp
    $HOME/bin/widt > $HOME/.widt.log
    echo "" >> $HOME/.widt.log
    cat $tmp >> $HOME/.widt.log 
    # echo "done."
    # print "You may go home now :-)"
}

function search_im()
{
    logs_dir=$HOME/.purple/logs
    dirs="$logs_dir/jabber/torsteinkrausework@gmail.com/
          $logs_dir/msn/torsteinkrausework@msn.com/
          $logs_dir/irc/torstein@catbert.escenic.com/    
    "
    for dir in $dirs; do
        find $dir -name "*.txt" | xargs grep --color $1
    done
}

function search_mailing_list_archive()
{
    dir=$HOME/mail/mailing-list-archive
    url="http://lists.escenic.com"

    find $dir -name "*.html" | \
        grep -i /[0-9]*.html$ | \
        xargs grep -A 2 -i $1 | \
        sed "s#${dir}#http\:\/#g" | \
        sed "s#html:#html #g"

    local result_html=/tmp/search-results.html
    echo "" > $result_html
    
    find $dir -name "*.html" | \
        grep -i /[0-9]*.html$ | \
        xargs grep -A 2 -i $1 | while read f; do
        sed "s#${dir}#<p><a href='http\:\/#g" | \
            sed "s#html:#html'>link</a></p>#g" \
            >> ${result_html}
    done
    opera ${result_html}
}

function open_jira_issue()
{
    opera https://jira.vizrt.com/browse/${1}
}

function search_otrs()
{
    url="http://otrs.escenic.com/otrs/index.pl"
    session_header_file=/tmp/`basename $0`-$USER-otrs.cookie

    otrs_user=`cat $HOME/.otrs | grep user | cut -d'=' -f2`
    otrs_password=`cat $HOME/.otrs | grep pass | cut -d'=' -f2`
    
    if [ -r $session_header_file ]; then
        session_header=`cat $session_header_file`
    else
        session_header=`wget -S -O /dev/null \
            --post-data "Action=Login&RequestedURL=&Lang=en&User=$otrs_user&Password=$otrs_password" \
            $url |& \
            grep Set-Cookie | \
            cut -d':' -f2 | \
            cut -d';' -f1`
        echo $session_header > $session_header_file
    fi

    current_year=`date +%Y`
    last_year=$(( $current_year - 1 ))

    uri_parameters=`wget -O -\
         --post-data "Action=AgentTicketSearch&Subaction=Search&TicketNumber=$1&CustomerID=&CustomerUserLogin=&From=&To=&Cc=&Subject=&Body=&TicketFreeText2=&TicketFreeText4=&TicketFreeText6=&TimeSearchType=&TicketCreateTimePointStart=Last&TicketCreateTimePoint=1&TicketCreateTimePointFormat=day&TicketCreateTimeStartMonth=12&TicketCreateTimeStartDay=5&TicketCreateTimeStartYear=$last_year&TicketCreateTimeStopMonth=1&TicketCreateTimeStopDay=4&TicketCreateTimeStopYear=$this_year&ResultForm=Normal&Profile=" \
         --header "Cookie: ${session_header}" \
         $url \
         2>/dev/null | \
         grep $1 | \
         cut -d'"' -f2 | \
         cut -d'?' -f2`
     opera "$url/?$uri_parameters"
}

function play_that_music()
{
    mpc clear
    
    for el in $@; do
        if [ $el = "music" ]; then
            continue
        fi

         mpc add $el
    done

    mpc shuffle
    mpc play
}

function p4_check_that_everythings_ok()
{
    find . -type f -name "*" | grep -v target | grep -v easybook | grep -v iml$ | \
        while read f; do
        p4 filelog $f 1>/dev/null
    done
}

function make_me_happy()
{
    setxkbmap us
    xmodmap ~/.xmodmaprc

    # skype is _really_ confused on my system
    #    release_sound_card
}

function set_random_wallpaper()
{
    wallpaper_names=$(ls ~/pictures/wallpapers/*.jpg)
    wallpaper_array=($wallpaper_names)
    number_of_wallpapers=${#wallpaper_array[*]}
    wallpaper=${wallpaper_array[$((RANDOM % number_of_wallpapers))]}
    display -window root -backdrop $wallpaper
}

# try to be smart first
if [  `echo $1 | sed 's/[0-9]//g' | wc -c` -lt 2 ]; then
    search_otrs $1
    exit 0
elif [ `echo $1 | egrep -v -i "VIZIWYG|ECOME|VF|STATS|DASH|ERDQ|FORUM|TM" | wc -c` -lt 1 ]; then
    open_jira_issue $1
    exit 0
fi

case "$1" in
    p4check)
        p4_check_that_everythings_ok
        ;;
    gohome)
        end_of_day
        ;;
    daily)
        start_of_day
        ;;
    happy)
        make_me_happy
        ;;
    jira)
        open_jira_issue $2
        ;;
    music)
        play_that_music $@
        ;;
    searchim)
        search_im $2
        ;;
    searchlists)
        search_mailing_list_archive $2
        ;;
    otrs)
        search_otrs $2
        ;;
    dates)
        escenic_dates
        ;;
    wallpaper)
        set_random_wallpaper
        ;;
    delete-local-caches)
        delete_cache_files
        ;;
    *)
        print "Usage: $(basename $0) <command>" 
        echo "" 
        echo "   Where <command> is one of: " 
        echo "     * daily                Check out & build the latest code"
        echo "     * dates                Print the dates of the Escenic offices"
        echo "     * gohome               Create a report of accomplishments"
        echo "     * jira <issue>         Open the given issue in the browser"
        echo "     * searchim <query>     Search the chat logs"
        echo "     * searchlists <query>  Search the mailing list archive"
        exit 1
esac

exit 0
