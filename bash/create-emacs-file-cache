#! /usr/bin/env bash

# torstein.k.johansen@gmail.com

# Creates the file cache I use with the file-cache and ido-mode Emacs
# modules.

source $HOME/src/moria/src/common/indispensable.sh || {
  echo "Cannot live without moria :-("
  exit 1
}

dir_list="
$HOME/src
"
suffix_list="
java
xml
properties
sh
as
jrxml
mxml
jrxml
"
file_list="
$HOME/src/my-little-friends/bash/create-emacs-file-cache
$HOME/src/my-little-friends/bash/tkj
$HOME/.bashrc
$HOME/.eclimrc
$HOME/.emacs
/opt/jboss/standalone/log/server.log
"

function read_user_conf() {
  local conf_file=$HOME/.$(basename $0).conf
  if [ -r $conf_file ]; then
    source $conf_file
  fi
}

tmp_file=$(mktemp)
file=~/.emacs.d/file_cache.el
read_user_conf

print "Generating new file cache in ${tmp_file} ..."
echo "(" > $tmp_file

# add .java files
function create_entry() {
  echo "(\""$(basename $1)"\" \""$(dirname $1)"/\")"
}

name_string="( -name *.xml"
for suffix in $suffix_list; do
  name_string="${name_string} -o -name *.${suffix}"
done

name_string="${name_string} )"
find -L $dir_list ${name_string} 2>/dev/null | while read f; do
  if [ $(echo "$f" | egrep -v "classes|target|.idea" | wc -l) -gt 0 ]; then
    continue
  fi

  if [ $(echo $f | grep TEST | wc -l) -gt 0 ]; then
    continue
  fi
  create_entry $f >> ${tmp_file}
done


for f in $file_list; do
  create_entry $f >> ${tmp_file}
done

echo ")" >> ${tmp_file}

mv ${file} ${file}.old
mv ${tmp_file} ${file}
print "Done, $file is now ready. (old cache is available as ${file}.old)."

