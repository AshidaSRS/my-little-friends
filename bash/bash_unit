#! /usr/bin/env bash

# Unit testing for BASH
# by torstein.k.johansen@gmail.com

show_positives=0

# $1 message
# $2 expected
# $3 actual
function assert_equals()
{
    local message=$1
    local expected=$2
    local actual=$3
    
    if [ $# -eq 2 ]; then
        local message=""
        local expected=$1
        local actual=$2
    fi

    if [[ $(is_number $expected) -eq 1 && $(is_number $actual) -eq 1 ]]; then
        if [ $expected -ne $actual ]; then
            echo "FAILED: ${message}: Expected <$expected>, but was <$actual>"
        elif [ $show_positives -eq 1 ]; then
            echo "PASSED: ${message}: Expected <$expected> and got <$actual>"
        fi
    else
        if [ "$expected" != "$actual" ]; then
            echo "FAILED: ${message}: Expected <$expected>, but was <$actual>"
        elif [ $show_positives -eq 1 ]; then
            echo "PASSED: ${message}: Expected <$expected> and got <$actual>"
        fi
    fi
}

function is_number()
{
    if [ $(echo $1 | \
        tr '[A-Z]' '[a-z]' | \
        grep -v '[a-z]' | \
        grep -v '.' | \
        wc -l) -gt 0 ]; then
        echo 1
        return
    fi
    
    echo 0
}


